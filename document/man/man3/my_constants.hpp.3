.TH "eostool/my_constants.hpp" 3 "Sat Nov 21 2020" "my_ns_structure" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eostool/my_constants.hpp
.SH SYNOPSIS
.br
.PP
\fC#include <cmath>\fP
.br
\fC#include <gsl/gsl_const_cgs\&.h>\fP
.br
\fC#include <iostream>\fP
.br

.SS "Variables"

.in +1c
.ti -1c
.RI "const double \fBG\fP = GSL_CONST_CGS_GRAVITATIONAL_CONSTANT"
.br
.ti -1c
.RI "const double \fBC\fP = GSL_CONST_CGS_SPEED_OF_LIGHT"
.br
.ti -1c
.RI "const double \fBHb\fP = GSL_CONST_CGS_PLANCKS_CONSTANT_HBAR"
.br
.ti -1c
.RI "const double \fBeV\fP = GSL_CONST_CGS_ELECTRON_VOLT"
.br
.ti -1c
.RI "const double \fBMs\fP = GSL_CONST_CGS_SOLAR_MASS"
.br
.ti -1c
.RI "const double \fBMeV_to_ifm\fP = \fBeV\fP/(\fBHb\fP*\fBC\fP*1\&.e7)"
.br
.ti -1c
.RI "const double \fBMeV3_to_ifm3\fP = pow(\fBMeV_to_ifm\fP, 3)"
.br
.ti -1c
.RI "const double \fBMeVEifm3_to_ergEicm3\fP = 1\&.e45*\fBeV\fP"
.br
.ti -1c
.RI "const double \fBMeVEifm3_to_gEicm3\fP = 1\&.e45*\fBeV\fP/pow(\fBC\fP, 2)"
.br
.ti -1c
.RI "const double \fBgEicm3_to_dmls\fP = pow(\fBG\fP, 3)*pow(\fBMs\fP, 2)/pow(\fBC\fP, 6)"
.br
.ti -1c
.RI "const double \fBergEicm3_to_dmls\fP = pow(\fBG\fP, 3)*pow(\fBMs\fP, 2)/pow(\fBC\fP, 8)"
.br
.ti -1c
.RI "const double \fBMeV4_to_dmls\fP = \fBMeV3_to_ifm3\fP*\fBMeVEifm3_to_ergEicm3\fP*\fBergEicm3_to_dmls\fP"
.br
.in -1c
.SH "Variable Documentation"
.PP 
.SS "const double C = GSL_CONST_CGS_SPEED_OF_LIGHT"

.PP
Definition at line 13 of file my_constants\&.hpp\&.
.SS "const double ergEicm3_to_dmls = pow(\fBG\fP, 3)*pow(\fBMs\fP, 2)/pow(\fBC\fP, 8)"

.PP
Definition at line 26 of file my_constants\&.hpp\&.
.SS "const double eV = GSL_CONST_CGS_ELECTRON_VOLT"

.PP
Definition at line 15 of file my_constants\&.hpp\&.
.SS "const double G = GSL_CONST_CGS_GRAVITATIONAL_CONSTANT"

.PP
Definition at line 12 of file my_constants\&.hpp\&.
.SS "const double gEicm3_to_dmls = pow(\fBG\fP, 3)*pow(\fBMs\fP, 2)/pow(\fBC\fP, 6)"

.PP
Definition at line 25 of file my_constants\&.hpp\&.
.SS "const double Hb = GSL_CONST_CGS_PLANCKS_CONSTANT_HBAR"

.PP
Definition at line 14 of file my_constants\&.hpp\&.
.SS "const double MeV3_to_ifm3 = pow(\fBMeV_to_ifm\fP, 3)"

.PP
Definition at line 20 of file my_constants\&.hpp\&.
.SS "const double MeV4_to_dmls = \fBMeV3_to_ifm3\fP*\fBMeVEifm3_to_ergEicm3\fP*\fBergEicm3_to_dmls\fP"

.PP
Definition at line 29 of file my_constants\&.hpp\&.
.SS "const double MeV_to_ifm = \fBeV\fP/(\fBHb\fP*\fBC\fP*1\&.e7)"

.PP
Definition at line 19 of file my_constants\&.hpp\&.
.SS "const double MeVEifm3_to_ergEicm3 = 1\&.e45*\fBeV\fP"

.PP
Definition at line 21 of file my_constants\&.hpp\&.
.SS "const double MeVEifm3_to_gEicm3 = 1\&.e45*\fBeV\fP/pow(\fBC\fP, 2)"

.PP
Definition at line 22 of file my_constants\&.hpp\&.
.SS "const double Ms = GSL_CONST_CGS_SOLAR_MASS"

.PP
Definition at line 16 of file my_constants\&.hpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for my_ns_structure from the source code\&.
